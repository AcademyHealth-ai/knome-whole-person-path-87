# Codemagic CI configuration for cloud iOS builds (Capacitor)
# Docs: https://docs.codemagic.io/yaml-basic-configuration/yaml-builds/

workflows:
  ios_testflight:
    name: iOS TestFlight
    max_build_duration: 60
    environment:
      xcode: 15.4
      cocoapods: default
      node: 20.15.0
      # Create these groups in Codemagic UI and add required variables:
      # - app_store_connect: APP_STORE_KEY_ID, APP_STORE_ISSUER_ID, APP_STORE_P8
      # - ios_signing: DEVELOPMENT_TEAM, CM_CERTIFICATE, CM_PROVISIONING_PROFILE
      groups:
        - app_store_connect
        - ios_signing
      vars:
        XCODE_SCHEME: App
        BUNDLE_IDENTIFIER: app.lovable.a97379e496a1241fea9bafbc36edce731
    cache:
      cache_paths:
        - ~/.npm
        - ~/.cache/CocoaPods
        - $CM_BUILD_DIR/node_modules
        - ios/App/Pods
    scripts:
      - name: Preflight - verify App Store Connect variables
        script: |
          set -e
          echo "Checking Codemagic environment variables for App Store Connect..."
          missing=0
          if [ -z "${APP_STORE_KEY_ID}" ]; then echo "ERROR: APP_STORE_KEY_ID is missing. Attach the 'app_store_connect' env group or set the variable."; missing=1; fi
          if [ -z "${APP_STORE_ISSUER_ID}" ]; then echo "ERROR: APP_STORE_ISSUER_ID is missing."; missing=1; fi
          if [ -z "${APP_STORE_P8}" ]; then echo "ERROR: APP_STORE_P8 (p8 private key) is missing."; missing=1; fi
          if [ "$missing" -eq 1 ]; then echo "One or more required variables are missing. Failing early."; exit 1; fi
          if ! echo "$APP_STORE_P8" | grep -q "BEGIN PRIVATE KEY"; then echo "ERROR: APP_STORE_P8 does not contain a valid -----BEGIN PRIVATE KEY----- header."; exit 1; fi
          echo "Preflight OK."
      - name: Install dependencies
        script: |
          npm ci
          # Ensure Capacitor CLI is available
          npm install -g @capacitor/cli
      - name: Build web assets
        script: |
          npm run build
      - name: Setup iOS platform (Capacitor)
        script: |
          # Remove any existing iOS platform to avoid conflicts
          if [ -d "ios" ]; then
            echo "Removing existing iOS directory..."
            rm -rf ios
          fi
          
          # Add iOS platform
          echo "Adding iOS platform..."
          npx cap add ios
      - name: Install iOS dependencies
        script: |
          # Sync Capacitor and install CocoaPods
          npx cap sync ios
          cd ios/App && pod install
      - name: Set up manual code signing
        script: |
          echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
          echo $CM_PROVISIONING_PROFILE | base64 --decode > /tmp/profile.mobileprovision
          
          # Add certificate to keychain
          security create-keychain -p "" build.keychain
          security import /tmp/certificate.p12 -t agg -k ~/Library/Keychains/build.keychain -P "" -A
          security list-keychains -s ~/Library/Keychains/build.keychain
          security default-keychain -s ~/Library/Keychains/build.keychain
          security unlock-keychain -p "" ~/Library/Keychains/build.keychain
          security set-key-partition-list -S apple-tool:,apple: -s -k "" ~/Library/Keychains/build.keychain
          
          # Install provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp /tmp/profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
          
          cd ios/App
          # Configure manual signing
          sed -i '' 's/CODE_SIGN_STYLE = Automatic/CODE_SIGN_STYLE = Manual/g' App.xcodeproj/project.pbxproj
      - name: Archive (Release)
        script: |
          cd ios/App
          xcodebuild \
            -workspace App.xcworkspace \
            -scheme "$XCODE_SCHEME" \
            -configuration Release \
            -destination "generic/platform=iOS" \
            -archivePath "$CM_BUILD_DIR/build/App.xcarchive" \
            clean archive \
            DEVELOPMENT_TEAM="$DEVELOPMENT_TEAM" \
            CODE_SIGN_STYLE=Manual \
            CODE_SIGN_IDENTITY="iPhone Distribution" \
            PROVISIONING_PROFILE=/tmp/profile.mobileprovision
      - name: Export IPA
        script: |
          xcodebuild \
            -exportArchive \
            -archivePath "$CM_BUILD_DIR/build/App.xcarchive" \
            -exportOptionsPlist "$CM_EXPORT_OPTIONS" \
            -exportPath "$CM_BUILD_DIR/build/ipa"
    artifacts:
      - build/ipa/*.ipa
      - build/App.xcarchive
    publishing:
      app_store_connect:
        key_id: $APP_STORE_KEY_ID
        issuer_id: $APP_STORE_ISSUER_ID
        api_key: $APP_STORE_P8
        submit_to_testflight: true
